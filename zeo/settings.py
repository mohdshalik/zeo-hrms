
"""
Django settings for zeo project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
from pathlib import Path
from datetime import timedelta
from celery import Celery
from celery.schedules import crontab
import os
# from tenant_schemas.middleware import DefaultTenantMiddleware
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-bu8sj-dd80ca20luk_(bo_tho55@wtmlpy^9k9gun$!f8&z4)&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

CORS_ALLOW_CREDENTIALS = True
ALLOWED_HOSTS = [ 'zeoproducts.com','.zeoproducts.com','*','.zeo.com']



SHARED_APPS = [
    'django_tenants',
    "tenant_users.permissions",
    "tenant_users.tenants",
    "tenant_users",
    'UserManagement',
    'Core',
    'rest_framework',
    # 'rest_framework_simplejwt.token_blacklist',
    'channels',
    'django.contrib.contenttypes',
    'django.contrib.auth',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.admin',
    'django.contrib.staticfiles',
    'rest_framework.authtoken',
    'import_export',
    'django_celery_beat',
]

TENANT_APPS = [
    # "tenant_users.permissions",
    'OrganisationManager',
    'EmpManagement',
    'calendars',
    'LeaveManagement',
    'django.contrib.admin',
]

INSTALLED_APPS = list(set(SHARED_APPS + TENANT_APPS))
INSTALLED_APPS = SHARED_APPS + [app for app in TENANT_APPS if app not in SHARED_APPS]
SITE_ID = 1
TENANT_SCHEMA_DEFAULT ='public'
TENANT_MODEL = "UserManagement.company" # app.Model
TENANT_DOMAIN_MODEL = "UserManagement.Domain"  # app.Model
TENANT_USERS_DOMAIN = "localhost"
PUBLIC_SCHEMA_NAME = 'public'

# DEFAULT_FILE_STORAGE = 'tenant_schemas.storage.TenantFileSystemStorage'
DATABASE_ROUTERS = (
    'django_tenants.routers.TenantSyncRouter',
)
PG_EXTRA_SEARCH_PATHS = ['extensions']
SESSION_COOKIE_DOMAIN = '.zeo.com'
SESSION_COOKIE_SECURE = True
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOWED_ORIGINS = [
  "http://localhost:4200"   # Example for your frontend URL
    # Add other allowed origins as needed
]

CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

MIDDLEWARE = [
    # 'UserManagement.middleware.RequestIDTenantMiddleware',

    
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_tenants.middleware.TenantMiddleware',
    'UserManagement.middleware.TenantTimezoneMiddleware'
    # 'django_tenant_users.middleware.TenantUserMiddleware',
    
    # 'UserManagement.middleware.MultiTenantAuthenticationMiddleware',
      
]


SESSION_ENGINE = 'django.contrib.sessions.backends.db'
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',  # Change as needed
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}

ROOT_URLCONF = 'zeo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
TEMPLATE_CONTEXT_PROCESSORS = (
    'django.core.context_processors.request',
    #...
)

WSGI_APPLICATION = 'zeo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django_tenants.postgresql_backend',
        'NAME': 'zeo2', 
        'USER': 'postgres', 
        'PASSWORD': '1234',
        'HOST': '127.0.0.1', 
        'PORT': '5432',
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "UserManagement.CustomUser"

AUTHENTICATION_BACKENDS = [
    "tenant_users.permissions.backend.UserBackend",
    # 'django_tenant_users.permissions.backend.UserBackend',
    "django.contrib.auth.backends.ModelBackend",
]
#auth and permissions
#auth and permissions
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}
REST_USE_JWT = True
SIMPLE_JWT = {
    # Customize token settings if needed
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=24),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=14),
}

SHOW_PUBLIC_IF_NO_TENANT_FOUND = True
#https://github.com/microsoftarchive/redis/releases
# Celery settings
CELERY_BROKER_URL = 'redis://localhost:6379/0'  # Or your Redis server URL
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
# Set this to ensure retries during startup
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True

CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
TIME_ZONE = 'UTC'  # or your specific timezone
CELERY_TIMEZONE = 'Asia/Kolkata'  # or your specific timezone
CELERY_ENABLE_UTC = True  # Ensure UTC is enabled if needed

CELERY_BEAT_SCHEDULE = {
    'schedule-document-expiry-notifications-for-all-tenants': {
        'task': 'EmpManagement.tasks.send_document_expiry_notifications_for_all_tenants',
        'schedule': crontab(hour=17, minute=44) 
        # 'schedule': timedelta(days=1),

    },
    'accrue-leaves-every-day': {
        'task': 'LeaveManagement.tasks.accrue_leaves',  # Use the correct path to your task
        'schedule': crontab(hour=18, minute=16),  
    },
    'reset-leave-month':{
        'task':'LeaveManagement.tasks.reset_leave_balances',
        'schedule':crontab(hour=12,minute=00)
    }
}
# CELERY_BEAT_SCHEDULE_FILENAME = 'celerybeat-schedule'  # Save Celery Beat schedule state

CELERY_IMPORTS = ('EmpManagement.tasks',)


#default email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'approver312@gmail.com'
EMAIL_HOST_PASSWORD = 'bzbj fbex wctf jmza'

