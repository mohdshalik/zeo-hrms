# Generated by Django 4.2 on 2025-04-22 08:58

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('OrganisationManager', '0001_initial'),
        ('EmpManagement', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompensatoryLeaveRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(choices=[('work_request', 'Work Request'), ('leave_request', 'Compensatory Leave Request')], default='work_request', max_length=15)),
                ('request_date', models.DateField(auto_now_add=True)),
                ('work_date', models.DateField()),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
            ],
        ),
        migrations.CreateModel(
            name='employee_leave_request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('applied_on', models.DateField(auto_now_add=True)),
                ('document_number', models.CharField(blank=True, max_length=120, null=True, unique=True)),
                ('dis_half_day', models.BooleanField(default=False)),
                ('half_day_period', models.CharField(blank=True, choices=[('first_half', 'First Half'), ('second_half', 'Second Half')], max_length=20, null=True)),
                ('number_of_days', models.FloatField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
            ],
        ),
        migrations.CreateModel(
            name='leave_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('image', models.ImageField(upload_to='leave_images/')),
                ('code', models.CharField(max_length=30, unique=True)),
                ('type', models.CharField(choices=[('paid', 'paid'), ('unpaid', 'unpaid')], max_length=20)),
                ('unit', models.CharField(choices=[('days', 'days'), ('hours', 'hours')], max_length=10)),
                ('negative', models.BooleanField(default=False)),
                ('description', models.CharField(max_length=200)),
                ('allow_half_day', models.BooleanField(default=False)),
                ('valid_from', models.DateField(blank=True, null=True)),
                ('valid_to', models.DateField(blank=True, null=True)),
                ('include_weekend_and_holiday', models.BooleanField(default=False)),
                ('use_common_workflow', models.BooleanField(default=False)),
                ('include_dashboard', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LvRejectionReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason_text', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('break_duration', models.DurationField(default=datetime.timedelta(0))),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ShiftPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('friday_shift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pattern_friday', to='calendars.shift')),
                ('monday_shift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pattern_monday', to='calendars.shift')),
                ('saturday_shift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pattern_saturday', to='calendars.shift')),
                ('sunday_shift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pattern_sunday', to='calendars.shift')),
                ('thursday_shift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pattern_thursday', to='calendars.shift')),
                ('tuesday_shift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pattern_tuesday', to='calendars.shift')),
                ('wednesday_shift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pattern_wednesday', to='calendars.shift')),
            ],
        ),
        migrations.CreateModel(
            name='weekend_calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('calendar_code', models.CharField(max_length=100)),
                ('year', models.PositiveIntegerField()),
                ('monday', models.CharField(choices=[('leave', 'Leave'), ('fullday', 'Full Day'), ('halfday', 'Half Day')], default='fullday')),
                ('tuesday', models.CharField(choices=[('leave', 'Leave'), ('fullday', 'Full Day'), ('halfday', 'Half Day')], default='fullday')),
                ('wednesday', models.CharField(choices=[('leave', 'Leave'), ('fullday', 'Full Day'), ('halfday', 'Half Day')], default='fullday')),
                ('thursday', models.CharField(choices=[('leave', 'Leave'), ('fullday', 'Full Day'), ('halfday', 'Half Day')], default='fullday')),
                ('friday', models.CharField(choices=[('leave', 'Leave'), ('fullday', 'Full Day'), ('halfday', 'Half Day')], default='fullday')),
                ('saturday', models.CharField(choices=[('leave', 'Leave'), ('fullday', 'Full Day'), ('halfday', 'Half Day')], default='fullday')),
                ('sunday', models.CharField(choices=[('leave', 'Leave'), ('fullday', 'Full Day'), ('halfday', 'Half Day')], default='fullday')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WeekendDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekday', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=9)),
                ('day_type', models.CharField(choices=[('leave', 'Leave'), ('fullday', 'Full Day'), ('halfday', 'Half Day')], max_length=7)),
                ('week_of_month', models.PositiveIntegerField(blank=True, null=True)),
                ('month_of_year', models.PositiveIntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('weekend_calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='details', to='calendars.weekend_calendar')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='LvEmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_type', models.CharField(choices=[('request_created', 'Request Created'), ('request_approved', 'Request Approved'), ('request_rejected', 'Request Rejected')], max_length=50)),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LvCommonWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='lvBalanceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=100, unique=True)),
                ('report_data', models.FileField(blank=True, null=True, upload_to='lvbalance_report/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('export_report', 'Can export report'),),
            },
        ),
        migrations.CreateModel(
            name='LvApprovalNotify',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('recipient_employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
                ('recipient_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LeaveResetPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reset', models.BooleanField(default=False)),
                ('frequency', models.CharField(choices=[('years', 'Years'), ('months', 'Months'), ('days', 'Days')], max_length=20)),
                ('month', models.CharField(choices=[('Jan', 'January'), ('Feb', 'February'), ('Mar', 'March'), ('Apr', 'April'), ('May', 'May'), ('Jun', 'June'), ('Jul', 'July'), ('Aug', 'August'), ('Sep', 'September'), ('Oct', 'October'), ('Nov', 'November'), ('Dec', 'December')], default='Dec', max_length=30)),
                ('day', models.CharField(choices=[('1st', '1st Day of the Month'), ('last', 'Last Day of the Month')], max_length=20)),
                ('allow_cf', models.BooleanField(default=False)),
                ('carry_forward_choice', models.CharField(choices=[('carry_forward', 'carry forward'), ('carry_forward_with_expiry', 'carry forward with expiry')], max_length=100)),
                ('cf_value', models.PositiveIntegerField()),
                ('cf_unit_or_percentage', models.CharField(choices=[('percentage', 'percentage'), ('unit', 'unit')], max_length=50)),
                ('cf_max_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('cf_expires_in_value', models.PositiveIntegerField(blank=True, null=True)),
                ('cf_time_choice', models.CharField(blank=True, choices=[('years', 'Years'), ('months', 'Months'), ('days', 'Days')], max_length=20, null=True)),
                ('allow_encashment', models.BooleanField(default=False)),
                ('encashment_value', models.PositiveIntegerField(default=50)),
                ('encashment_unit_or_percentage', models.CharField(blank=True, choices=[('percentage', 'percentage'), ('unit', 'unit')], max_length=50, null=True)),
                ('encashment_max_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reset_policy', to='calendars.leave_type')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=100, unique=True)),
                ('report_data', models.FileField(blank=True, null=True, upload_to='leave_report/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('export_report', 'Can export report'),),
            },
        ),
        migrations.CreateModel(
            name='LeaveEncashmentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reset_date', models.DateField()),
                ('encashment_units', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('encashment_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('max_limit', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('encashment_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('year', models.PositiveIntegerField(default=2025)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='encashment_created_by', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendars.leave_type')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveCarryForwardTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reset_date', models.DateField()),
                ('carried_forward_units', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('carried_forward_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('max_limit', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('final_carry_forward', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('year', models.PositiveIntegerField(default=2025)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='carry_forward_created_by', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendars.leave_type')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveApprovalReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=100, unique=True)),
                ('report_data', models.FileField(blank=True, null=True, upload_to='leave_approval_report/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('export_report', 'Can export report'),),
            },
        ),
        migrations.CreateModel(
            name='LeaveApprovalLevels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('is_compensatory', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('request_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leave_approval_levels', to='calendars.leave_type')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('level', models.IntegerField(default=1)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('note', models.TextField(blank=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('employee_id', models.IntegerField(blank=True, null=True)),
                ('approver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('compensatory_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='calendars.compensatoryleaverequest')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('leave_request', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='calendars.employee_leave_request')),
            ],
        ),
        migrations.CreateModel(
            name='leave_reset_transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reset_date', models.DateField()),
                ('initial_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('carry_forward_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('encashment_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('final_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('year', models.PositiveIntegerField(default=2025)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reset_created_by', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendars.leave_type')),
            ],
        ),
        migrations.CreateModel(
            name='leave_entitlement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_experience', models.PositiveIntegerField(default=0, help_text='Minimum experience required.')),
                ('effective_after_unit', models.CharField(choices=[('years', 'Years'), ('months', 'Months'), ('days', 'days')], default='months', max_length=10)),
                ('effective_after_from', models.CharField(choices=[('date_of_joining', 'Date of Joining'), ('date_of_confirmation', 'Date of Confirmation')], max_length=20)),
                ('accrual', models.BooleanField(default=False)),
                ('accrual_rate', models.FloatField(default=0, help_text='Accrual rate per period (e.g., days/months/yearly)')),
                ('accrual_frequency', models.CharField(choices=[('years', 'Years'), ('months', 'Months'), ('days', 'days')], max_length=20)),
                ('accrual_month', models.CharField(blank=True, choices=[('Jan', 'January'), ('Feb', 'February'), ('Mar', 'March'), ('Apr', 'April'), ('May', 'May'), ('Jun', 'June'), ('Jul', 'July'), ('Aug', 'August'), ('Sep', 'September'), ('Oct', 'October'), ('Nov', 'November'), ('Dec', 'December')], default='Jan', max_length=3, null=True)),
                ('accrual_day', models.CharField(choices=[('1st', '1st Day of the Month'), ('last', 'Last Day of the Month')], default='1st', max_length=10)),
                ('prorate_accrual', models.BooleanField(default=False, help_text='Enable prorate accrual for this leave type.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendars.leave_type')),
            ],
        ),
        migrations.CreateModel(
            name='leave_accrual_transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accrual_date', models.DateField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('year', models.PositiveIntegerField(default=2025)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendars.leave_type')),
            ],
        ),
        migrations.CreateModel(
            name='holiday_calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calendar_title', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('restricted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('calendar', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='calendars.holiday_calendar')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeYearlyCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('daily_data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('emp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='yearly_calendar', to='EmpManagement.emp_master')),
            ],
            options={
                'ordering': ['year'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeShiftSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_name', models.CharField(blank=True, max_length=50, null=True)),
                ('shift_type', models.CharField(choices=[('rotating', 'Rotating Shift'), ('fixed', 'Fixed Shift')], default='rotating', max_length=10)),
                ('rotation_cycle_weeks', models.IntegerField(blank=True, default=4, null=True)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('departments', models.ManyToManyField(blank=True, related_name='shift_schedules', to='OrganisationManager.dept_master')),
                ('employee', models.ManyToManyField(blank=True, related_name='shift_schedules', to='EmpManagement.emp_master')),
                ('single_shift_pattern', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='calendars.shiftpattern')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeRejoining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rejoining_date', models.DateField()),
                ('unpaid_leave_days', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
                ('leave_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='calendars.employee_leave_request')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeMachineMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_code', models.CharField(max_length=100, unique=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
            ],
        ),
        migrations.AddField(
            model_name='employee_leave_request',
            name='leave_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendars.leave_type'),
        ),
        migrations.CreateModel(
            name='emp_leave_balance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.FloatField(blank=True, null=True)),
                ('openings', models.IntegerField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendars.leave_type')),
            ],
        ),
        migrations.CreateModel(
            name='CompensatoryLeaveTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateField(auto_now_add=True)),
                ('transaction_type', models.CharField(choices=[('addition', 'Addition'), ('deduction', 'Deduction')], max_length=10)),
                ('days', models.FloatField()),
                ('reason', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
            ],
        ),
        migrations.CreateModel(
            name='CompensatoryLeaveBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.FloatField(default=0)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=100, unique=True)),
                ('report_data', models.FileField(blank=True, null=True, upload_to='attendance_report/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('export_report', 'Can export report'),),
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('check_in_time', models.TimeField(blank=True, null=True)),
                ('check_out_time', models.TimeField(blank=True, null=True)),
                ('total_hours', models.DurationField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
                ('shift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='calendars.shift')),
            ],
        ),
        migrations.CreateModel(
            name='assign_weekend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('related_to', models.CharField(choices=[('branch', 'Branch'), ('department', 'Department'), ('category', 'Category'), ('employee', 'Employee')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ManyToManyField(blank=True, null=True, to='OrganisationManager.brnch_mstr')),
                ('category', models.ManyToManyField(blank=True, null=True, to='OrganisationManager.dept_master')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('department', models.ManyToManyField(blank=True, null=True, to='OrganisationManager.ctgry_master')),
                ('employee', models.ManyToManyField(blank=True, null=True, to='EmpManagement.emp_master')),
                ('weekend_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendars.weekend_calendar')),
            ],
        ),
        migrations.CreateModel(
            name='assign_holiday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('related_to', models.CharField(choices=[('branch', 'Branch'), ('department', 'Department'), ('category', 'Category'), ('employee', 'Employee')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ManyToManyField(blank=True, null=True, to='OrganisationManager.brnch_mstr')),
                ('category', models.ManyToManyField(blank=True, null=True, to='OrganisationManager.dept_master')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('department', models.ManyToManyField(blank=True, null=True, to='OrganisationManager.ctgry_master')),
                ('employee', models.ManyToManyField(blank=True, null=True, to='EmpManagement.emp_master')),
                ('holiday_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendars.holiday_calendar')),
            ],
        ),
        migrations.CreateModel(
            name='applicablity_critirea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('B', 'Both')], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('branch', models.ManyToManyField(blank=True, to='OrganisationManager.brnch_mstr')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('department', models.ManyToManyField(blank=True, to='OrganisationManager.dept_master')),
                ('designation', models.ManyToManyField(blank=True, to='OrganisationManager.desgntn_master')),
                ('leave_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='calendars.leave_type')),
                ('role', models.ManyToManyField(blank=True, to='OrganisationManager.ctgry_master')),
            ],
        ),
        migrations.CreateModel(
            name='WeekPatternAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.IntegerField()),
                ('schedule', models.ForeignKey(limit_choices_to={'shift_type': 'rotating'}, on_delete=django.db.models.deletion.CASCADE, to='calendars.employeeshiftschedule')),
                ('shift_pattern', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='calendars.shiftpattern')),
            ],
            options={
                'unique_together': {('schedule', 'week_number')},
            },
        ),
        migrations.CreateModel(
            name='ShiftOverride',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EmpManagement.emp_master')),
                ('override_shift', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='calendars.shift')),
            ],
            options={
                'unique_together': {('employee', 'date')},
            },
        ),
        migrations.AddConstraint(
            model_name='lvcommonworkflow',
            constraint=models.UniqueConstraint(fields=('level',), name='Lv_common_workflow_level'),
        ),
        migrations.AlterUniqueTogether(
            name='leaveapprovallevels',
            unique_together={('level', 'request_type')},
        ),
        migrations.AlterUniqueTogether(
            name='employeeyearlycalendar',
            unique_together={('emp', 'year')},
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('employee', 'date')},
        ),
    ]
